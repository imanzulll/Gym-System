package gym;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author hazlami
 */
public class ADMIN_UI extends javax.swing.JFrame {

    dbConnect dbCon = new dbConnect();

    public ADMIN_UI() {
        initComponents();
        showAdminTableData();
        showCochesTableData();
        showMemberTableData();
        
    }
//    public void tableCenterContent(JTable jt)
//    {
//               try {
//            jt.setFillsViewportHeight(true);
//            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
//            centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
//            jt.setDefaultRenderer(String.class, centerRenderer);
//
//            for (int x = 0; x < jt.getColumnCount(); x++) {
//                jt.getColumnModel().getColumn(x).setCellRenderer(centerRenderer);
//            }
//        } catch (Exception e) {
//            System.out.println(e);
//        }
//    }
    
    
     public void showAdminTableData() {
        try {

            dbCon.dbConnector();
            String sql = "SELECT admin_Id,name,userName,password,mobile,address from Admin";
            ResultSet rss = dbCon.st.executeQuery(sql);
            adminTable.setModel(DbUtils.resultSetToTableModel(rss));
            
            rss.close();
           dbCon.dbClose();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     
     public void showCochesTableData() {
        try {

            dbCon.dbConnector();
            String sql = "SELECT coach_id,coach_name,coach_username,coach_password,coach_mobile,coach_address from coaches";
            ResultSet rss = dbCon.st.executeQuery(sql);
            coachTable.setModel(DbUtils.resultSetToTableModel(rss));
            
            rss.close();
            dbCon.dbClose();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     
     public void showMemberTableData() {
        try {

            dbCon.dbConnector();
            String sql = "SELECT member_id,member_name, member_username,member_password,member_mobile,member_address from members";
            ResultSet rss = dbCon.st.executeQuery(sql);
            memberTable.setModel(DbUtils.resultSetToTableModel(rss));
            
            rss.close();
           dbCon.dbClose();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     
     
    public void resetValues() {
        nameTxt.setText("");
        passTxt.setText("");
        userTxt.setText("");
        mobileTxt.setText("");
        addressTxt.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        passTxt = new javax.swing.JTextField();
        addressTxt = new javax.swing.JTextField();
        userTxt = new javax.swing.JTextField();
        idTxt = new javax.swing.JTextField();
        nameTxt = new javax.swing.JTextField();
        mobileTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        memberTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        coachTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        adminTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        combo = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADMIN");

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ADMIN");

        jButton4.setText("BACK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(471, 471, 471)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Type in Your Details");

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Choose Type: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Search by ID#:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Username");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Password");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Mobile Number");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Address");

        idTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idTxtKeyReleased(evt);
            }
        });

        jButton1.setText("DELETE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("SAVE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(255, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 0, 0));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jButton3.setText("UPDATE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        memberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(memberTable);

        coachTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(coachTable);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Member");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Coach");

        adminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(adminTable);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Admin");

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Coach", "Member" }));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Name");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)
                        .addGap(39, 39, 39)
                        .addComponent(idTxt)
                        .addGap(32, 32, 32))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(nameTxt)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(userTxt)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(passTxt)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(mobileTxt)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(addressTxt)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(40, 40, 40)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(40, 40, 40)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(50, 50, 50)))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(2, 2, 2))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(userTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(passTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(mobileTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(jSeparator2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
           if (idTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter the ID Number !", "WARNING !!!", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                int p = JOptionPane.showConfirmDialog(null, "<html> <hr>Do You Really Want To <b><mark>Delete?</mark></b></html>", "DELETE", JOptionPane.YES_NO_OPTION);
                if (p == 0) {
                    dbCon.dbConnector();
                    if((combo.getSelectedItem()).equals("Admin"))
                    {
                    String sql = "DELETE FROM `Admin` WHERE admin_Id='" +idTxt.getText()+ "'";
                    dbCon.st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "DELETED Successfully", "DELETED!", JOptionPane.INFORMATION_MESSAGE);
                    resetValues();
                    showAdminTableData();
                    }
                    else if((combo.getSelectedItem()).equals("Coach"))
                    {
                    String sql = "DELETE FROM `coaches` WHERE coach_id='" +idTxt.getText()+ "'";
                    dbCon.st.executeUpdate(sql);
                    String sql2 = "DELETE FROM `AssignedCoaches` WHERE coach_id='" +idTxt.getText()+ "'";
                    dbCon.st.executeUpdate(sql2);
                    JOptionPane.showMessageDialog(null, "DELETED Successfully", "DELETED!", JOptionPane.INFORMATION_MESSAGE);
                    resetValues();
                    showCochesTableData();
                    }
                     else if((combo.getSelectedItem()).equals("Member"))
                    {
                    String sql = "DELETE FROM `members` WHERE member_id='" +idTxt.getText()+ "'";
                    dbCon.st.executeUpdate(sql);
                    String sql2 = "DELETE FROM `AssignedCoaches` WHERE member_id='" +idTxt.getText()+ "'";
                    dbCon.st.executeUpdate(sql2);
                    JOptionPane.showMessageDialog(null, "DELETED Successfully", "DELETED!", JOptionPane.INFORMATION_MESSAGE);
                    resetValues();
                    showMemberTableData();
                    }
                   dbCon.dbClose();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if (((userTxt.getText()).equals(""))) {
            JOptionPane.showMessageDialog(null, "Details are Missing \n Please Enter the User Name!", "Warning!!!", JOptionPane.WARNING_MESSAGE);
        } else if (passTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter the Password", " WARNING....", JOptionPane.WARNING_MESSAGE);
        } else if (nameTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter the Name", " WARNING....", JOptionPane.WARNING_MESSAGE);
        } else if (((mobileTxt.getText()).equals(""))) {
            JOptionPane.showMessageDialog(null, "Please the Mobile Number", " WARNING....", JOptionPane.WARNING_MESSAGE);
        } else if (((addressTxt.getText()).equals(""))) {
            JOptionPane.showMessageDialog(null, "Please the Address", " WARNING....", JOptionPane.WARNING_MESSAGE);
        } else {
            if (combo.getSelectedItem().equals("Admin")) {
                try {
                    dbCon.dbConnector();
                    String sql = "INSERT INTO `Admin`(name,userName, password, mobile, address) "
                            + "VALUES ('" + nameTxt.getText() + "','" + userTxt.getText() + "','" + passTxt.getText() + "','" + mobileTxt.getText() + "','" + addressTxt.getText() + "')";
                    dbCon.st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Information Has Been Saved Successfully", "INFORMATION!", JOptionPane.INFORMATION_MESSAGE);
                    showAdminTableData();
                    resetValues();
                    dbCon.dbClose();
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e, "WARNING!", JOptionPane.WARNING_MESSAGE);
                }
            }
            else if (combo.getSelectedItem().equals("Coach")) {
                try {
                    dbCon.dbConnector();
                    String sql = "INSERT INTO `coaches`(`coach_name`, `coach_username`, `coach_password`, `coach_mobile`, `coach_address`) "
                            + "VALUES ('" + nameTxt.getText() + "','" + userTxt.getText() + "','" + passTxt.getText() + "','" + mobileTxt.getText() + "','" + addressTxt.getText() + "')";
                    dbCon.st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Information Has Been Saved Successfully", "INFORMATION!", JOptionPane.INFORMATION_MESSAGE);
                    showCochesTableData();
                    resetValues();
                    dbCon.dbClose();
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e, "WARNING!", JOptionPane.WARNING_MESSAGE);
                }
            }
              else if (combo.getSelectedItem().equals("Member")) {
                try {
                    dbCon.dbConnector();
                    String sql = "INSERT INTO `members`(`member_name`, `member_username`, `member_password`, `member_mobile`,`member_address`) "
                            + "VALUES ('" + nameTxt.getText() + "','" + userTxt.getText() + "','" + passTxt.getText() + "','" + mobileTxt.getText() + "','" + addressTxt.getText() + "')";
                    dbCon.st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Information Has Been Saved Successfully", "INFORMATION!", JOptionPane.INFORMATION_MESSAGE);
                    showMemberTableData();
                    resetValues();
                    dbCon.dbClose();
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e, "WARNING!", JOptionPane.WARNING_MESSAGE);
                    
                }
            }
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (((userTxt.getText()).equals(""))) {
            JOptionPane.showMessageDialog(null, "Details are Missing \n Please Enter the User Name!", "Warning!!!", JOptionPane.WARNING_MESSAGE);
        } else if (passTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter the Password", " WARNING....", JOptionPane.WARNING_MESSAGE);
        } else if (nameTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Enter the Name", " WARNING....", JOptionPane.WARNING_MESSAGE);
        } else if (((mobileTxt.getText()).equals(""))) {
            JOptionPane.showMessageDialog(null, "Please the Mobile Number", " WARNING....", JOptionPane.WARNING_MESSAGE);
        } else if (((addressTxt.getText()).equals(""))) {
            JOptionPane.showMessageDialog(null, "Please the Address", " WARNING....", JOptionPane.WARNING_MESSAGE);
        } else {
            if (combo.getSelectedItem().equals("Admin")) {
                try {
                    dbCon.dbConnector();
                    String sql = "UPDATE `Admin` SET `name`='" + nameTxt.getText() + "', "
                            + "`userName`='" + userTxt.getText() + "',`password`='" + passTxt.getText() + "',"
                            + "`mobile`='" + mobileTxt.getText() + "',`address`='" +addressTxt.getText()+ "'"
                            + " where `admin_Id`='" +idTxt.getText()+ "'";
                    dbCon.st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Information Has Been UPDATED Successfully", "INFORMATION!", JOptionPane.INFORMATION_MESSAGE);
                    showAdminTableData();
                    resetValues();
                    dbCon.dbClose();
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e, "WARNING!", JOptionPane.WARNING_MESSAGE);
                }
            }
            else if (combo.getSelectedItem().equals("Coach")) {
                try {
                    dbCon.dbConnector();
                    
                     String sql = "UPDATE `coaches` SET `coach_name`='" + nameTxt.getText() + "', "
                            + "`coach_username`='" + userTxt.getText() + "',`coach_password`='" + passTxt.getText() + "',"
                            + "`coach_mobile`='" + mobileTxt.getText() + "',`coach_address`='" +addressTxt.getText()+ "'"
                            + " where `coach_Id`='" +idTxt.getText()+ "'";
                    dbCon.st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Information Has Been UPDATED Successfully", "INFORMATION!", JOptionPane.INFORMATION_MESSAGE);
                    showCochesTableData();
                    resetValues();
                    dbCon.dbClose();
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e, "WARNING!", JOptionPane.WARNING_MESSAGE);
                }
            }
              else if (combo.getSelectedItem().equals("Member")) {
                try {
                    dbCon.dbConnector();
                    String sql = "UPDATE `members` SET `member_name`='" + nameTxt.getText() + "', "
                            + "`member_username`='" + userTxt.getText() + "',`member_password`='" + passTxt.getText() + "',"
                            + "`member_mobile`='" + mobileTxt.getText() + "',`member_address`='" +addressTxt.getText()+ "'"
                            + " where `member_Id`='" +idTxt.getText()+ "'";
                    dbCon.st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Information Has Been UPDATED Successfully", "INFORMATION!", JOptionPane.INFORMATION_MESSAGE);
                    showMemberTableData();
                    resetValues();
                    dbCon.dbClose();
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e, "WARNING!", JOptionPane.WARNING_MESSAGE);
                    
                }
            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Dashboard obj = new Dashboard();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void idTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTxtKeyReleased
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                if ((idTxt.getText().equals(""))) {
                    resetValues();
                } else {
                    
                        try {
                        dbCon.dbConnector();
                        if(combo.getSelectedItem().equals("Admin"))
                    {
                        String sql = "SELECT * FROM `Admin` WHERE admin_Id='" + idTxt.getText()+ "'";
                        ResultSet rss = dbCon.st.executeQuery(sql);
                            if (rss.next()) {
                                String add1 = rss.getString("name");
                                nameTxt.setText(add1);
                                String add2 = rss.getString("userName");
                                userTxt.setText(add2);
                                String add3 = rss.getString("password");
                                passTxt.setText(add3);
                                String add4 = rss.getString("mobile");
                                mobileTxt.setText(add4);
                                String add5 = rss.getString("address");
                                addressTxt.setText(add5);
                            }
                        else {
                            JOptionPane.showMessageDialog(null, "Not found anything for this ID");
                        }
                    }
                        else if(combo.getSelectedItem().equals("Coach"))
                        {
                              String sql = "SELECT * FROM `coaches` WHERE coach_id='" + idTxt.getText()+ "'";
                                ResultSet rss = dbCon.st.executeQuery(sql);
                                if (rss.next()) {
                                String add1 = rss.getString("coach_name");
                                nameTxt.setText(add1);
                                String add2 = rss.getString("coach_username");
                                userTxt.setText(add2);
                                String add3 = rss.getString("coach_password");
                                passTxt.setText(add3);
                                String add4 = rss.getString("coach_mobile");
                                mobileTxt.setText(add4);
                                String add5 = rss.getString("coach_address");
                                addressTxt.setText(add5);
                            }
                        else {
                            JOptionPane.showMessageDialog(null, "Not found anything for this ID");
                        }
                        }
                        else if(combo.getSelectedItem().equals("Member"))
                        {
                              String sql = "SELECT * FROM `members` WHERE member_id='" + idTxt.getText()+ "'";
                                ResultSet rss = dbCon.st.executeQuery(sql);
                                if (rss.next()) {
                                String add1 = rss.getString("member_name");
                                nameTxt.setText(add1);
                                String add2 = rss.getString("member_username");
                                userTxt.setText(add2);
                                String add3 = rss.getString("member_password");
                                passTxt.setText(add3);
                                String add4 = rss.getString("member_mobile");
                                mobileTxt.setText(add4);
                                String add5 = rss.getString("member_address");
                                addressTxt.setText(add5);
                            }
                        else {
                            JOptionPane.showMessageDialog(null, "Not found anything for this ID");
                        }
                                rss.close();
                                dbCon.dbClose();
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                        e.printStackTrace();
                    } 
                    
                   
                } 
        }
    }//GEN-LAST:event_idTxtKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADMIN_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADMIN_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADMIN_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADMIN_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ADMIN_UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTxt;
    private javax.swing.JTable adminTable;
    private javax.swing.JTable coachTable;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JTextField idTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable memberTable;
    private javax.swing.JTextField mobileTxt;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField passTxt;
    private javax.swing.JTextField userTxt;
    // End of variables declaration//GEN-END:variables
}
